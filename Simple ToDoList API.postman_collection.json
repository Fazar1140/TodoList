{
	"info": {
		"_postman_id": "40be37dc-ec25-4c16-8a66-503ddc0d82e0",
		"name": "Simple ToDoList API",
		"description": "## sebuah API todolist task yang mendemonstrasikan Basic CRUD\n\nterdiri dari berbagai fungsi dan kelas, project sederhana yang bermuatkan aplikasi interface task yang dapat kita update, delete, insert dan lain lain nya dengan tujuan untuk membuat jadwal atau rencana yang akan kita lakukan\n\n# Program yang digunakan\n\n1. Express.js : sebuah library atau framework open source yang mempermudah pembangunan aplikasi CRUD dan RESTFUL API\n    \n2. Postgresql : database yang digunakan untuk menyimpan task\n    \n3. Sequelize : sebagai ORM untuk mengakses database melalui bahasa pemograman menggunakan javascript\n    \n4. Bcrypt : mengubah password untuk memastikan keamanan database\n    \n5. JSONWebtoken : untuk keamanan akses database\n    \n6. cookie-parser: sebagai informasi cookies dalam browser\n    \n7. nodemon : menghitung ulang program setiap kali melakukan perubahan dengan save file",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "29272814"
	},
	"item": [
		{
			"name": "User",
			"item": [
				{
					"name": "Login",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "email",
									"value": "LeeGoldson@gmail.com",
									"type": "text"
								},
								{
									"key": "password",
									"value": "12345678",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "http://localhost:5000/Auth/signin",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "5000",
							"path": [
								"Auth",
								"signin"
							]
						},
						"description": "masuk kedalam akun yang telah kita buat"
					},
					"response": []
				},
				{
					"name": "SignUp",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "username",
									"value": "jacobson",
									"type": "text"
								},
								{
									"key": "email",
									"value": "Jacobson@gmail.com",
									"type": "text"
								},
								{
									"key": "password",
									"value": "12345678",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "http://localhost:5000/Auth/signup",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "5000",
							"path": [
								"Auth",
								"signup"
							]
						},
						"description": "Membuat akun yang berisikan username email password penting yang harus diisi"
					},
					"response": []
				},
				{
					"name": "Logout",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:5000/Auth/logout",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "5000",
							"path": [
								"Auth",
								"logout"
							]
						},
						"description": "keluar dari API dan menghapus cookies dan token"
					},
					"response": []
				}
			],
			"description": "API yang menyediakan fungsi untuk melakukan authentikasi, pembuatan user, masuk dan keluar (login atau logout)\n\n**Server**\n\n`http://localhost:5000/Auth`\n\nserver akan aktif dan untuk mengakses Authentikasi kita menggunakan routes /Auth\n\n# /Auth\n\n#### POST\n\n`Post http://localhost:5000/Auth/singup`\n\nMembuat akun yang berisikan username email password penting yang harus diisi\n\n`Post http://localhost:5000/Auth/signin`\n\nMelakukan akses login API yang harus diisikan oleh email dan password\n\n## Get\n\n`Get http://localhost:5000/Auth/logout`\n\nkeluar dari API dan menghapus cookies dan token"
		},
		{
			"name": "Task",
			"item": [
				{
					"name": "Create Task Table ('no token')",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "user_id",
									"value": "1",
									"type": "text"
								},
								{
									"key": "task_title",
									"value": "Membuat pasta",
									"type": "text"
								},
								{
									"key": "task_status",
									"value": "Optional",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "http://localhost:5000/Task/post",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "5000",
							"path": [
								"Task",
								"post"
							],
							"query": [
								{
									"key": "workspace",
									"value": "{{workspaceId}}",
									"description": "Optional. A workspace ID in which to create the collection.\n\nIf you do not include this query parameter, the system creates the collection in your \"My Workspace\" workspace.",
									"disabled": true
								}
							]
						},
						"description": "Membuat Task Table tanpa menggunakan token yang dihasilkan dari authentikasi"
					},
					"response": []
				},
				{
					"name": "Create Task Table ('token')",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MSwiZW1haWwiOiJMZWVHb2xkc29uQGdtYWlsLmNvbSIsInVzZXJuYW1lIjoiTGVlIiwiaWF0IjoxNzM0MDkyNzU3LCJleHAiOjE3MzQxNzkxNTd9.32bwKzlLQ0qGsHwyDv5vn-lfO793G16H0liII5RRvy8",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "task_title",
								"value": "Mengerjakan pr",
								"type": "text",
								"disabled": true
							},
							{
								"key": "task_status",
								"value": "Important",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "task_title",
									"value": "buat hamburger",
									"type": "text"
								},
								{
									"key": "task_status",
									"value": "Important",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "http://localhost:5000/Task/create",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "5000",
							"path": [
								"Task",
								"create"
							],
							"query": [
								{
									"key": "access_key",
									"value": "{{accessKey}}",
									"description": "Optional. A collection's read-only access key. Using this query parameter does not require an API key to call the endpoint.",
									"disabled": true
								}
							]
						},
						"description": "Membuat badan task yang berisikan task_title dan task_status harus memiliki token sehingga user_id terisi sesuai dengan hasil authentikasi yang telah dilakukan pada saat signin atau login"
					},
					"response": []
				},
				{
					"name": "Get All Task ('no token')",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:5000/Task/",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "5000",
							"path": [
								"Task",
								""
							]
						},
						"description": "Mengambil keseluruhan dari badan task tanpa token"
					},
					"response": []
				},
				{
					"name": "Get All task ('with token')",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MSwiZW1haWwiOiJMZWVHb2xkc29uQGdtYWlsLmNvbSIsInVzZXJuYW1lIjoiTGVlIiwiaWF0IjoxNzM0MDk1MTA0LCJleHAiOjE3MzQxODE1MDR9.9vooBVNMYxmTKy7yRnsYq9MqCON44myljL64-AKh6Rg",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": []
						},
						"url": {
							"raw": "http://localhost:5000/Task/myTask",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "5000",
							"path": [
								"Task",
								"myTask"
							]
						},
						"description": "Mengambil Keselurahan Body Task dengan token authentikasi yang sama"
					},
					"response": []
				},
				{
					"name": "Get Task by id ('with token')",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MiwiZW1haWwiOiJDaHVkR29sZHNvbkBnbWFpbC5jb20iLCJ1c2VybmFtZSI6IkNMZWUiLCJpYXQiOjE3MzQzNTI3MzgsImV4cCI6MTczNDQzOTEzOH0.3E5tP5t3CbBsrlGm5Wc0d1Iq95oXsvqLUxUP5Fip0Uc",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:5000/Task/1",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "5000",
							"path": [
								"Task",
								"1"
							],
							"query": [
								{
									"key": "workspace",
									"value": "{{workspaceId}}",
									"description": "Optional. A workspace ID.",
									"disabled": true
								}
							]
						},
						"description": "mengeluarkan task dengan token hasil dari authentikasi berdsarkan id"
					},
					"response": []
				},
				{
					"name": "Patch Task ('with token')",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MiwiZW1haWwiOiJDaHVkR29sZHNvbkBnbWFpbC5jb20iLCJ1c2VybmFtZSI6IkNMZWUiLCJpYXQiOjE3MzQzNTI3MzgsImV4cCI6MTczNDQzOTEzOH0.3E5tP5t3CbBsrlGm5Wc0d1Iq95oXsvqLUxUP5Fip0Uc",
									"type": "string"
								}
							]
						},
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "task_title",
									"value": "bersih rumah",
									"type": "text"
								},
								{
									"key": "task_status",
									"value": "Optional",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "http://localhost:5000/Task/1",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "5000",
							"path": [
								"Task",
								"1"
							],
							"query": [
								{
									"key": "task_title",
									"value": null,
									"disabled": true
								},
								{
									"key": "task_status",
									"value": null,
									"disabled": true
								}
							]
						},
						"description": "mengupdate task dengan token hasil dari authentikasi"
					},
					"response": []
				},
				{
					"name": "Delete Task ('with token')",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MSwiZW1haWwiOiJMZWVHb2xkc29uQGdtYWlsLmNvbSIsInVzZXJuYW1lIjoiTGVlIiwiaWF0IjoxNzM0MDk1MTA0LCJleHAiOjE3MzQxODE1MDR9.9vooBVNMYxmTKy7yRnsYq9MqCON44myljL64-AKh6Rg",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "urlencoded",
							"urlencoded": []
						},
						"url": {
							"raw": "http://localhost:5000/Task/1",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "5000",
							"path": [
								"Task",
								"1"
							]
						},
						"description": "Menghapus task body, harus melakukan authentikasi terlebih dahulu"
					},
					"response": []
				}
			],
			"description": "Api yang menyediakan fungsi untuk mengupdate badan atau body dalam task yang dapat kita buat, ubah dan dihapus\n\n##### Server\n\n`http://localhost:5000/Task`\n\nServer akan aktif dan memberikan fungsi yang dapat membuat, memanipulasi atau menghapus badan task\n\n## /Task\n\n### Post\n\nNon Token\n\n[<code>POST http://localhost:5000/Task/post</code>](http://localhost:5000/Task/post)\n\nMembuat badan task yang berisikan , user_id , task_title dan task_status tanpa harus menggunakan token\n\nToken\n\n[<code>POST http://localhost:5000/Task/create</code>](http://localhost:5000/Task/post)\n\nMembuat badan task yang berisikan task_title dan task_status harus memiliki token sehingga user_id terisi sesuai dengan hasil authentikasi yang telah dilakukan pada saat signin atau login\n\n### Get\n\nNon Token\n\n[<code>GET http://localhost:5000/Task/</code>](http://localhost:5000/Task/post)\n\nMemanggil keseluruhan Task Body yang dimiliki oleh berbagai user\n\nToken\n\n[<code>GET http://localhost:5000/Task/myTask</code>](http://localhost:5000/Task/post)\n\nMemanggil Task body yang dimiliki oleh user_id yang telah di autentikasikan dlm api signin\n\n[<code>GET http://localhost:5000/Task/:id</code>](http://localhost:5000/Task/post)\n\nMemanggil Task body yang dimiliki oleh user_id sesuai dengan param id yang dipanggil, jika tidak ada maka akan mengeluarkan error\n\n### Patch\n\nToken\n\n[<code>PATCH http://localhost:5000/Task/:id</code>](http://localhost:5000/Task/post)\n\nMengubah task body berdasarkan user_id sesuai dengan param id yang dipanggil berasal dari id dalam database Task\n\n### Delete\n\nToken\n\n[<code>DELETE http://localhost:5000/Task/:id</code>](http://localhost:5000/Task/post)\n\nMenghapus task body berdasarkan user_id dengan param id yang dipanggil berasal dari id dalam database task"
		},
		{
			"name": "TaskProp",
			"item": [
				{
					"name": "Create TaskProp ('no token')",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "user_id",
									"value": "1",
									"type": "text",
									"disabled": true
								},
								{
									"key": "task_id",
									"value": "2",
									"type": "text"
								},
								{
									"key": "task_step",
									"value": "beli daging",
									"type": "text"
								},
								{
									"key": "task_info",
									"value": "membeli daging sapi ayam dan lain lain",
									"type": "text"
								},
								{
									"key": "task_status",
									"value": "Important",
									"type": "text"
								},
								{
									"key": "task_title",
									"value": "",
									"type": "text",
									"disabled": true
								}
							]
						},
						"url": {
							"raw": "http://localhost:5000/TaskProp/post",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "5000",
							"path": [
								"TaskProp",
								"post"
							]
						},
						"description": "Membuat informasi Task tanpa menggunakan token"
					},
					"response": []
				},
				{
					"name": "Create TaskProp ('with token')",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MSwiZW1haWwiOiJMZWVHb2xkc29uQGdtYWlsLmNvbSIsInVzZXJuYW1lIjoiTGVlIiwiaWF0IjoxNzM0NDQ0OTg3LCJleHAiOjE3MzQ1MzEzODd9.-YE4xtxk8IufNYPtuqZbxviAibqEV16t1vXdvmiv_5k",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "task_id",
									"value": "2",
									"type": "text"
								},
								{
									"key": "task_step",
									"value": "membeli bumbu",
									"type": "text"
								},
								{
									"key": "task_info",
									"value": "beli garam lada paprika dll",
									"type": "text"
								},
								{
									"key": "task_status",
									"value": "Optional",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "http://localhost:5000/TaskProp/create",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "5000",
							"path": [
								"TaskProp",
								"create"
							]
						},
						"description": "membuat informasi lebih detail dari task dengan menggunkan token dari hasil authentikasi"
					},
					"response": []
				},
				{
					"name": "Get TaskProp ('no token')",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:5000/TaskProp/all",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "5000",
							"path": [
								"TaskProp",
								"all"
							]
						},
						"description": "Mengeluarkan keseluruhan informasi task properti dari task body tanpa menggunakan token"
					},
					"response": []
				},
				{
					"name": "Get TaskProp ('with token')",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MSwiZW1haWwiOiJMZWVHb2xkc29uQGdtYWlsLmNvbSIsInVzZXJuYW1lIjoiTGVlIiwiaWF0IjoxNzM0NDQ0OTg3LCJleHAiOjE3MzQ1MzEzODd9.-YE4xtxk8IufNYPtuqZbxviAibqEV16t1vXdvmiv_5k",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:5000/TaskProp/",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "5000",
							"path": [
								"TaskProp",
								""
							]
						},
						"description": "mengeluarkan informasi mengenai task properti dengan token dari hasil authentikasi"
					},
					"response": []
				},
				{
					"name": "Patch TaskProp ('with token')",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MSwiZW1haWwiOiJMZWVHb2xkc29uQGdtYWlsLmNvbSIsInVzZXJuYW1lIjoiTGVlIiwiaWF0IjoxNzM0NDQzNjExLCJleHAiOjE3MzQ1MzAwMTF9.EYzUzE20H8W5qfbOeSvD40PF9Rmt0ggAWci3CUf7LiA",
									"type": "string"
								}
							]
						},
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "taskPropId",
									"value": "1",
									"type": "text"
								},
								{
									"key": "task_step",
									"value": "beli snack",
									"type": "text"
								},
								{
									"key": "task_status",
									"value": "Important",
									"type": "text"
								},
								{
									"key": "task_info",
									"value": "membeli keripik kentang",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "http://localhost:5000/TaskProp/2",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "5000",
							"path": [
								"TaskProp",
								"2"
							]
						},
						"description": "mengubah informasi mengenai task properti yang dimiliki oleh task body harus memiliki token dari hasil authentikasi"
					},
					"response": []
				},
				{
					"name": "Delete TaskProp ('with token')",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MSwiZW1haWwiOiJMZWVHb2xkc29uQGdtYWlsLmNvbSIsInVzZXJuYW1lIjoiTGVlIiwiaWF0IjoxNzM0NDQ0OTg3LCJleHAiOjE3MzQ1MzEzODd9.-YE4xtxk8IufNYPtuqZbxviAibqEV16t1vXdvmiv_5k",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "taskPropId",
									"value": "9",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "http://localhost:5000/TaskProp/1",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "5000",
							"path": [
								"TaskProp",
								"1"
							]
						},
						"description": "menghapus task informasi yang dimiliki oleh task body harus memiliki token dari authentikasi"
					},
					"response": []
				}
			],
			"description": "API yang menyediakan fungsi yang berupa informasi yang lebih detail mengenai Task body yang berisikan langkah task, beserta dengan informasinya dan juga status task, serta menyediakan fungsi untuk membuat, mengupdate dan menghapus database Task_inner\n\n#### Server\n\n`http://localhost:5000/TaskProp`\n\nServer akan aktif dan memberikan fungsi yang dapat membuat, memanipulasi atau menghapus database task_inner\n\n## /TaskProp\n\n### Post\n\nNon token\n\n`POST http://localhost:5000/TaskProp/post`\n\nMembuat properti task yang berisikan user_id,task_step,task_info,task_status tanpa memerlukan token\n\nToken\n\n`POST http://localhost:5000/TaskProp/create`\n\nMembuat properti task yang berisikan task_step,task_info,task_status dengan user_id yang diambil melalui authentikasi token\n\n### Get\n\nNon Token\n\n`GET http://localhost:5000/TaskProp/all`\n\nmengeluarkan properti task yang dimiliki oleh berbagai user\n\nToken\n\n`GET http://localhost:5000/TaskProp/`\n\nmengeluarkan properti task berdasarkan user_id yang diambil melalui autentikasi token\n\n### Patch\n\nToken\n\n`PATCH http://localhost:5000/TaskProp/:id`\n\nmengupdate properti task berdasarkan params yang merujuk ke id Task database dan memiliki autentikasi token yang sama, dengan request body taskPropId yang berupa id dari database Task_inner\n\n### Delete\n\nToken\n\n`DELETE http://localhost:5000/TaskProp/:id`\n\nmenghapus properti task berdsarkan params yang merujuk ke id Task database dengan autentikasi token, dengan request body taskPropId dari id database Task_inner"
		}
	],
	"auth": {
		"type": "apikey",
		"apikey": [
			{
				"key": "key",
				"value": "X-API-Key",
				"type": "string"
			},
			{
				"key": "value",
				"value": "{{token}}",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "baseUrl",
			"value": "https://farming-simulator.pstmn.io"
		}
	]
}
